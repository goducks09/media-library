{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cwpul\\\\Desktop\\\\Projects\\\\MovieLibrary\\\\src\\\\addItem.js\";\n\nimport React, { useState } from 'react';\nimport { debounce } from 'lodash';\nimport { Picker } from '@react-native-picker/picker';\nimport { StyledButtonText, StyledCenteredSafeArea, StyledRoundedButton, StyledTextInput } from \"./config/globalStyles\";\n\nvar AddItem = function AddItem() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      format = _useState2[0],\n      setFormat = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pictureQuality = _useState4[0],\n      setPictureQuality = _useState4[1];\n\n  var getMoviesFromApiAsync = debounce(function _callee() {\n    var response, json;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://api.themoviedb.org/3/search/multi?api_key=c3f3d49f497ac5857c73ee93695e9da2&language=en-US&query=test&page=1'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            console.log(json.results);\n            return _context.abrupt(\"return\", json.results);\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  }, 2000);\n\n  var _onChangeText = function onChangeText(text) {\n    var results = getMoviesFromApiAsync();\n    var resultList = [];\n    results.forEach(function (result) {\n      var name = result.name,\n          release_date = result.release_date,\n          first_air_date = result.first_air_date,\n          poster_path = result.poster_path;\n      console.log(name);\n    });\n  };\n\n  return React.createElement(StyledCenteredSafeArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(StyledTextInput, {\n    autoFocus: true,\n    onChangeText: function onChangeText(text) {\n      return _onChangeText(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), React.createElement(Picker, {\n    selectedValue: pictureQuality,\n    style: {\n      height: 50,\n      width: 150\n    },\n    onValueChange: function onValueChange(itemValue) {\n      setPictureQuality(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"SD\",\n    value: \"sd\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"HD\",\n    value: \"hd\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"4K\",\n    value: \"4k\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  })), React.createElement(Picker, {\n    selectedValue: format,\n    style: {\n      height: 50,\n      width: 150\n    },\n    onValueChange: function onValueChange(itemValue) {\n      return setFormat(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Physical\",\n    value: \"physical\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Digital\",\n    value: \"digital\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })), React.createElement(StyledRoundedButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(StyledButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Add to Collection\")));\n};\n\nexport default AddItem;","map":{"version":3,"sources":["C:/Users/cwpul/Desktop/Projects/MovieLibrary/src/addItem.js"],"names":["React","useState","debounce","Picker","StyledButtonText","StyledCenteredSafeArea","StyledRoundedButton","StyledTextInput","AddItem","format","setFormat","pictureQuality","setPictureQuality","getMoviesFromApiAsync","fetch","response","json","console","log","results","error","onChangeText","text","resultList","forEach","result","name","release_date","first_air_date","poster_path","height","width","itemValue"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAASC,gBAAT,EAA2BC,sBAA3B,EAAmDC,mBAAnD,EAAwEC,eAAxE;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,kBACUP,QAAQ,CAAC,IAAD,CADlB;AAAA;AAAA,MACXQ,MADW;AAAA,MACHC,SADG;;AAAA,mBAE0BT,QAAQ,CAAC,IAAD,CAFlC;AAAA;AAAA,MAEXU,cAFW;AAAA,MAEKC,iBAFL;;AAOlB,MAAMC,qBAAqB,GAAGX,QAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEVY,KAAK,CAAC,qHAAD,CAFK;;AAAA;AAE3BC,YAAAA,QAF2B;AAAA;AAAA,6CAGdA,QAAQ,CAACC,IAAT,EAHc;;AAAA;AAG3BA,YAAAA,IAH2B;AAI/BC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAjB;AAJ+B,6CAKxBH,IAAI,CAACG,OALmB;;AAAA;AAAA;AAAA;AAO/BF,YAAAA,OAAO,CAACG,KAAR;;AAP+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EASnC,IATmC,CAAtC;;AAWA,MAAMC,aAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC3B,QAAMH,OAAO,GAAGN,qBAAqB,EAArC;AACA,QAAIU,UAAU,GAAG,EAAjB;AACAJ,IAAAA,OAAO,CAACK,OAAR,CAAgB,UAAAC,MAAM,EAAI;AAAA,UACdC,IADc,GACsCD,MADtC,CACdC,IADc;AAAA,UACRC,YADQ,GACsCF,MADtC,CACRE,YADQ;AAAA,UACMC,cADN,GACsCH,MADtC,CACMG,cADN;AAAA,UACsBC,WADtB,GACsCJ,MADtC,CACsBI,WADtB;AAEtBZ,MAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACH,KAHD;AAIH,GAPD;;AASA,SACI,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AACI,IAAA,SAAS,EAAE,IADf;AAEI,IAAA,YAAY,EAAE,sBAAAJ,IAAI;AAAA,aAAID,aAAY,CAACC,IAAD,CAAhB;AAAA,KAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAEX,cADnB;AAEI,IAAA,KAAK,EAAE;AAAEmB,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAFX;AAGI,IAAA,aAAa,EAAE,uBAACC,SAAD,EAAe;AAC1BpB,MAAAA,iBAAiB,CAACoB,SAAD,CAAjB;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,IAAnB;AAAwB,IAAA,KAAK,EAAC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,IAAnB;AAAwB,IAAA,KAAK,EAAC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,IAAnB;AAAwB,IAAA,KAAK,EAAC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CALJ,EAiBI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAEvB,MADnB;AAEI,IAAA,KAAK,EAAE;AAAEqB,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAFX;AAGI,IAAA,aAAa,EAAE,uBAACC,SAAD;AAAA,aACXtB,SAAS,CAACsB,SAAD,CADE;AAAA,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,UAAnB;AAA8B,IAAA,KAAK,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,SAAnB;AAA6B,IAAA,KAAK,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAjBJ,EA2BI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CA3BJ,CADJ;AAiCH,CA5DD;;AA8DA,eAAexB,OAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { debounce } from 'lodash';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { StyledButtonText, StyledCenteredSafeArea, StyledRoundedButton, StyledTextInput } from './config/globalStyles';\r\n\r\nconst AddItem = () => {\r\n    const [format, setFormat] = useState(null);\r\n    const [pictureQuality, setPictureQuality] = useState(null);\r\n\r\n    //use debounce when sending request to minimize api hits\r\n    // send the query parameters but do the api call from backend\r\n    // MAKE SURE TO USE API KEY AS A HEADER AND NOT IN THE URL\r\n    const getMoviesFromApiAsync = debounce(async () => {\r\n        try {\r\n            let response = await fetch('https://api.themoviedb.org/3/search/multi?api_key=c3f3d49f497ac5857c73ee93695e9da2&language=en-US&query=test&page=1');\r\n            let json = await response.json();\r\n            console.log(json.results);\r\n            return json.results;\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }, 2000);\r\n\r\n    const onChangeText = (text) => {\r\n        const results = getMoviesFromApiAsync();\r\n        let resultList = [];\r\n        results.forEach(result => {\r\n            const { name, release_date, first_air_date, poster_path } = result;\r\n            console.log(name);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <StyledCenteredSafeArea>\r\n            <StyledTextInput\r\n                autoFocus={true}\r\n                onChangeText={text => onChangeText(text)}\r\n            />\r\n            <Picker\r\n                selectedValue={pictureQuality}\r\n                style={{ height: 50, width: 150 }}\r\n                onValueChange={(itemValue) => {\r\n                    setPictureQuality(itemValue);\r\n                }\r\n                }>\r\n                <Picker.Item label=\"SD\" value=\"sd\" />\r\n                <Picker.Item label=\"HD\" value=\"hd\" />\r\n                <Picker.Item label=\"4K\" value=\"4k\" />\r\n            </Picker>\r\n\r\n            <Picker\r\n                selectedValue={format}\r\n                style={{ height: 50, width: 150 }}\r\n                onValueChange={(itemValue) =>\r\n                    setFormat(itemValue)\r\n                }>\r\n                <Picker.Item label=\"Physical\" value=\"physical\" />\r\n                <Picker.Item label=\"Digital\" value=\"digital\" />\r\n            </Picker>\r\n\r\n            <StyledRoundedButton>\r\n                <StyledButtonText>Add to Collection</StyledButtonText>\r\n            </StyledRoundedButton>\r\n        </StyledCenteredSafeArea>\r\n    );\r\n}\r\n\r\nexport default AddItem;"]},"metadata":{},"sourceType":"module"}