{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cwpul\\\\Desktop\\\\Projects\\\\MovieLibrary\\\\src\\\\movie.js\";\n\nimport React, { useReducer } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { StyledStandardSafeArea } from \"./config/globalStyles\";\nvar initialState = {\n  actors: [],\n  category: [],\n  dateAdded: '',\n  director: {},\n  format: [],\n  genre: '',\n  imageURL: '',\n  releaseDate: 0,\n  runTime: 0,\n  title: ''\n};\n\nvar reducer = function reducer() {\n  console.log('reducer');\n};\n\nvar Movie = function Movie(_ref) {\n  var route = _ref.route;\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      movie = _useReducer2[0],\n      setMovie = _useReducer2[1];\n\n  var movieDetails = route.params.movieDetails;\n  return React.createElement(StyledStandardSafeArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, movieDetails.title), React.createElement(Image, {\n    source: movieDetails.imageURL,\n    style: {\n      height: 150,\n      width: 150\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Starring:\"), movieDetails.actors.map(function (actor, index) {\n    return React.createElement(Text, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, actor.fullName);\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Runtime: \", movieDetails.runTime), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Genre: \", movieDetails.genre), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Format:\", movieDetails.format.map(function (format) {\n    return format;\n  })));\n};\n\nexport default Movie;","map":{"version":3,"sources":["C:/Users/cwpul/Desktop/Projects/MovieLibrary/src/movie.js"],"names":["React","useReducer","StyledStandardSafeArea","initialState","actors","category","dateAdded","director","format","genre","imageURL","releaseDate","runTime","title","reducer","console","log","Movie","route","movie","setMovie","movieDetails","params","height","width","map","actor","index","fullName"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;AAEA,SAASC,sBAAT;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,SAAS,EAAE,EAHM;AAIjBC,EAAAA,QAAQ,EAAE,EAJO;AAKjBC,EAAAA,MAAM,EAAE,EALS;AAMjBC,EAAAA,KAAK,EAAE,EANU;AAOjBC,EAAAA,QAAQ,EAAE,EAPO;AAQjBC,EAAAA,WAAW,EAAE,CARI;AASjBC,EAAAA,OAAO,EAAE,CATQ;AAUjBC,EAAAA,KAAK,EAAE;AAVU,CAArB;;AAaA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,CAFD;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAAA,oBACGjB,UAAU,CAACa,OAAD,EAAUX,YAAV,CADb;AAAA;AAAA,MAChBgB,KADgB;AAAA,MACTC,QADS;;AAAA,MAEfC,YAFe,GAEEH,KAAK,CAACI,MAFR,CAEfD,YAFe;AAGvB,SACI,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,YAAY,CAACR,KAApB,CADJ,EAGI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAEQ,YAAY,CAACX,QADzB;AAEI,IAAA,KAAK,EAAE;AAACa,MAAAA,MAAM,EAAE,GAAT;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAQI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARJ,EASKH,YAAY,CAACjB,MAAb,CAAoBqB,GAApB,CAAwB,UAACC,KAAD,EAAQC,KAAR;AAAA,WACrB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,KAAK,CAACE,QAAzB,CADqB;AAAA,GAAxB,CATL,EAaI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBP,YAAY,CAACT,OAA7B,CAbJ,EAcI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAcS,YAAY,CAACZ,KAA3B,CAdJ,EAeI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACKY,YAAY,CAACb,MAAb,CAAoBiB,GAApB,CAAwB,UAAAjB,MAAM;AAAA,WAC3BA,MAD2B;AAAA,GAA9B,CADL,CAfJ,CADJ;AAuBH,CA1BD;;AA4BA,eAAeS,KAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport { Image, Text } from 'react-native';\r\nimport { StyledStandardSafeArea } from './config/globalStyles';\r\n\r\nconst initialState = {\r\n    actors: [], //TODO needs to be an array of obj {firstName, lastName, fullName}\r\n    category: [],\r\n    dateAdded: '',\r\n    director: {},\r\n    format: [], //TODO needs to take input and comma separate (e.g. \"4K Blu-ray Physical\" => [\"4K\", \"Blu-ray\", \"Physical\"])\r\n    genre: '', //TODO make array for multiple options?\r\n    imageURL: '',\r\n    releaseDate: 0,\r\n    runTime: 0,\r\n    title: '',\r\n}\r\n\r\nconst reducer = () => {\r\n    console.log('reducer');\r\n}\r\n\r\nconst Movie = ({route}) => {\r\n    const [movie, setMovie] = useReducer(reducer, initialState);\r\n    const { movieDetails } = route.params;\r\n    return (\r\n        <StyledStandardSafeArea>\r\n            <Text>{movieDetails.title}</Text>\r\n\r\n            <Image\r\n                source={movieDetails.imageURL}\r\n                style={{height: 150, width: 150}}\r\n            />\r\n            \r\n            <Text>Starring:</Text>\r\n            {movieDetails.actors.map((actor, index) => \r\n                <Text key={index}>{actor.fullName}</Text>\r\n            )}\r\n\r\n            <Text>Runtime: {movieDetails.runTime}</Text>\r\n            <Text>Genre: {movieDetails.genre}</Text>\r\n            <Text>Format:\r\n                {movieDetails.format.map(format =>\r\n                    format\r\n                )}\r\n            </Text>\r\n        </StyledStandardSafeArea>\r\n    );\r\n}\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}