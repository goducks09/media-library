{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cwpul\\\\Desktop\\\\Projects\\\\MovieLibrary\\\\src\\\\screens\\\\homeScreen.js\",\n    _templateObject,\n    _templateObject2;\n\nimport React, { useState, useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styled from 'styled-components/native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport seedMovies from \"../../movieData\";\nvar newMovies = seedMovies.movies;\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      movies = _useState2[0],\n      setMovies = _useState2[1];\n\n  var handleRandomMoviePress = function handleRandomMoviePress() {\n    var randomIndex = Math.floor(Math.random() * Math.floor(movies.length));\n    navigation.navigate('Movie Details', {\n      movieDetails: movies[randomIndex]\n    });\n  };\n\n  useEffect(function () {\n    setMovies(newMovies);\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Movie Library\"), movies && React.createElement(React.Fragment, null, React.createElement(StyledRegularText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, \"Recently Added\"), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, movies.map(function (movie) {\n    return React.createElement(Pressable, {\n      key: movie.id,\n      onPress: function onPress() {\n        return navigation.navigate('Movie Details', {\n          movieDetails: movie\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }\n    }, React.createElement(Image, {\n      style: {\n        height: 75,\n        width: 50\n      },\n      source: {\n        uri: movie.imageURL\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 37\n      }\n    }));\n  }))), React.createElement(StyledRegularText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"View By\"), React.createElement(TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, React.createElement(StyledButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Title\")), React.createElement(TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, React.createElement(StyledButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Genre\")), React.createElement(TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, React.createElement(StyledButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Actor\")), React.createElement(TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, React.createElement(StyledButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Format\")), React.createElement(TouchableOpacity, {\n    onPress: handleRandomMoviePress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, React.createElement(StyledButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Pick random movie\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'space-around',\n    marginHorizontal: 16\n  },\n  row: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  }\n});\nvar StyledRegularText = styled.Text(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  font-size: 36px;\\n\"])));\nvar StyledButtonText = styled.Text(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n    font-size: 28px;\\n\"])));\nexport default HomeScreen;","map":{"version":3,"sources":["C:/Users/cwpul/Desktop/Projects/MovieLibrary/src/screens/homeScreen.js"],"names":["React","useState","useEffect","styled","ScrollView","seedMovies","newMovies","movies","HomeScreen","navigation","setMovies","handleRandomMoviePress","randomIndex","Math","floor","random","length","navigate","movieDetails","styles","container","row","map","movie","id","height","width","uri","imageURL","StyleSheet","create","alignItems","flex","justifyContent","marginHorizontal","flexDirection","flexWrap","StyledRegularText","Text","StyledButtonText"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { Image, Pressable, SafeAreaView, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport styled from 'styled-components/native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport seedMovies from '../../movieData';\r\n\r\nconst newMovies = seedMovies.movies;\r\n\r\nconst HomeScreen = ({navigation}) => {\r\n    const [movies, setMovies] = useState(null);\r\n\r\n    const handleRandomMoviePress = () => {\r\n        //TODO make sure value doesn't duplicate\r\n        const randomIndex = Math.floor(Math.random() * Math.floor(movies.length));\r\n        navigation.navigate('Movie Details', { movieDetails: movies[randomIndex] });\r\n    }\r\n\r\n    useEffect(() => { \r\n        setMovies(newMovies);\r\n    }, []);\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <ScrollView contentContainerStyle={styles.container}>\r\n                <Text>Movie Library</Text>\r\n                {movies &&\r\n                    <>\r\n                        <StyledRegularText>Recently Added</StyledRegularText>\r\n                        <View style={styles.row}>\r\n                            {movies.map(movie =>\r\n                                <Pressable key={movie.id} onPress={() => navigation.navigate('Movie Details', {movieDetails: movie})}>\r\n                                    <Image \r\n                                        style={{height: 75, width: 50}}\r\n                                        source={{ uri: movie.imageURL }}\r\n                                    />\r\n                                </Pressable>\r\n                            )}    \r\n                        </View>\r\n                    </>\r\n                }\r\n\r\n                <StyledRegularText>View By</StyledRegularText>\r\n                <TouchableOpacity>\r\n                    <StyledButtonText>Title</StyledButtonText>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity>\r\n                    <StyledButtonText>Genre</StyledButtonText>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity>\r\n                    <StyledButtonText>Actor</StyledButtonText>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity>\r\n                    <StyledButtonText>Format</StyledButtonText>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity onPress={handleRandomMoviePress}>\r\n                    <StyledButtonText>Pick random movie</StyledButtonText>\r\n                </TouchableOpacity>\r\n            </ScrollView>\r\n        </SafeAreaView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        alignItems: 'center',\r\n        flex: 1,\r\n        justifyContent: 'space-around',\r\n        marginHorizontal: 16,\r\n    },\r\n    row: {\r\n        justifyContent: 'center',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap'\r\n    }\r\n});\r\n\r\nconst StyledRegularText = styled.Text`\r\n  font-size: 36px;\r\n`;\r\n\r\nconst StyledButtonText = styled.Text`\r\n    font-size: 28px;\r\n`;\r\n\r\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}