{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cwpul\\\\Desktop\\\\Projects\\\\MovieLibrary\\\\src\\\\movie.js\";\n\nimport React, { useReducer } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { StyledRegularText, StyledSmallText, StyledCenteredSafeArea } from \"./config/globalStyles\";\nvar initialState = {\n  actors: [],\n  category: [],\n  dateAdded: '',\n  director: {},\n  format: [],\n  genre: '',\n  imageURL: '',\n  releaseDate: 0,\n  runTime: 0,\n  title: ''\n};\n\nvar reducer = function reducer() {\n  console.log('reducer');\n};\n\nvar Movie = function Movie(_ref) {\n  var route = _ref.route;\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      movie = _useReducer2[0],\n      setMovie = _useReducer2[1];\n\n  var movieDetails = route.params.movieDetails;\n  return React.createElement(StyledCenteredSafeArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: movieDetails.imageURL,\n    style: {\n      height: 150,\n      width: 150\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), React.createElement(StyledRegularText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Starring:\"), movieDetails.actors.map(function (actor, index) {\n    return React.createElement(StyledSmallText, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, actor.fullName);\n  }), React.createElement(StyledRegularText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Runtime: \", React.createElement(StyledSmallText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 41\n    }\n  }, movieDetails.runTime, \" min\")), React.createElement(StyledRegularText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Genre: \", React.createElement(StyledSmallText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 39\n    }\n  }, movieDetails.genre)), React.createElement(StyledRegularText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Format:\", movieDetails.format.map(function (format) {\n    return React.createElement(StyledSmallText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, \" \", format);\n  })));\n};\n\nexport default Movie;","map":{"version":3,"sources":["C:/Users/cwpul/Desktop/Projects/MovieLibrary/src/movie.js"],"names":["React","useReducer","StyledRegularText","StyledSmallText","StyledCenteredSafeArea","initialState","actors","category","dateAdded","director","format","genre","imageURL","releaseDate","runTime","title","reducer","console","log","Movie","route","movie","setMovie","movieDetails","params","height","width","map","actor","index","fullName"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;AAEA,SAASC,iBAAT,EAA4BC,eAA5B,EAA6CC,sBAA7C;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,SAAS,EAAE,EAHM;AAIjBC,EAAAA,QAAQ,EAAE,EAJO;AAKjBC,EAAAA,MAAM,EAAE,EALS;AAMjBC,EAAAA,KAAK,EAAE,EANU;AAOjBC,EAAAA,QAAQ,EAAE,EAPO;AAQjBC,EAAAA,WAAW,EAAE,CARI;AASjBC,EAAAA,OAAO,EAAE,CATQ;AAUjBC,EAAAA,KAAK,EAAE;AAVU,CAArB;;AAaA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,CAFD;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAAA,oBACGnB,UAAU,CAACe,OAAD,EAAUX,YAAV,CADb;AAAA;AAAA,MAChBgB,KADgB;AAAA,MACTC,QADS;;AAAA,MAEfC,YAFe,GAEEH,KAAK,CAACI,MAFR,CAEfD,YAFe;AAGvB,SACI,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAEA,YAAY,CAACX,QADzB;AAEI,IAAA,KAAK,EAAE;AAACa,MAAAA,MAAM,EAAE,GAAT;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,EAOKH,YAAY,CAACjB,MAAb,CAAoBqB,GAApB,CAAwB,UAACC,KAAD,EAAQC,KAAR;AAAA,WACrB,oBAAC,eAAD;AAAiB,MAAA,GAAG,EAAEA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BD,KAAK,CAACE,QAApC,CADqB;AAAA,GAAxB,CAPL,EAWI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4B,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBP,YAAY,CAACT,OAA/B,SAA5B,CAXJ,EAYI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA0B,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBS,YAAY,CAACZ,KAA/B,CAA1B,CAZJ,EAaI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACKY,YAAY,CAACb,MAAb,CAAoBiB,GAApB,CAAwB,UAAAjB,MAAM;AAAA,WAC3B,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAmBA,MAAnB,CAD2B;AAAA,GAA9B,CADL,CAbJ,CADJ;AAqBH,CAxBD;;AA0BA,eAAeS,KAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport { Image, Text } from 'react-native';\r\nimport { StyledRegularText, StyledSmallText, StyledCenteredSafeArea } from './config/globalStyles';\r\n\r\nconst initialState = {\r\n    actors: [], //TODO needs to be an array of obj {firstName, lastName, fullName}\r\n    category: [],\r\n    dateAdded: '',\r\n    director: {},\r\n    format: [], //TODO needs to take input and comma separate (e.g. \"4K Blu-ray Physical\" => [\"4K\", \"Blu-ray\", \"Physical\"])\r\n    genre: '', //TODO make array for multiple options?\r\n    imageURL: '',\r\n    releaseDate: 0,\r\n    runTime: 0,\r\n    title: '',\r\n}\r\n\r\nconst reducer = () => {\r\n    console.log('reducer');\r\n}\r\n\r\nconst Movie = ({route}) => {\r\n    const [movie, setMovie] = useReducer(reducer, initialState);\r\n    const { movieDetails } = route.params;\r\n    return (\r\n        <StyledCenteredSafeArea>\r\n            <Image\r\n                source={movieDetails.imageURL}\r\n                style={{height: 150, width: 150}}\r\n            />\r\n            \r\n            <StyledRegularText>Starring:</StyledRegularText>\r\n            {movieDetails.actors.map((actor, index) => \r\n                <StyledSmallText key={index}>{actor.fullName}</StyledSmallText>\r\n            )}\r\n\r\n            <StyledRegularText>Runtime: <StyledSmallText>{movieDetails.runTime} min</StyledSmallText></StyledRegularText>\r\n            <StyledRegularText>Genre: <StyledSmallText>{movieDetails.genre}</StyledSmallText></StyledRegularText>\r\n            <StyledRegularText>Format:\r\n                {movieDetails.format.map(format =>\r\n                    <StyledSmallText> {format}</StyledSmallText>\r\n                )}\r\n            </StyledRegularText>\r\n        </StyledCenteredSafeArea>\r\n    );\r\n}\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}