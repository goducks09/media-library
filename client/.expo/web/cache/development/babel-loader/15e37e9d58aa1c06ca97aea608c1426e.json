{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cwpul\\\\Desktop\\\\Projects\\\\MovieLibrary\\\\client\\\\src\\\\addItem.js\";\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { debounce } from 'lodash';\nimport { Picker } from '@react-native-picker/picker';\nimport { StyledButtonText, StyledCenteredSafeArea, StyledImage, StyledPressable, StyledRoundedButton, StyledRowView, StyledSmallText, StyledTextInput } from \"./config/globalStyles\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SearchBar from \"./components/searchBar\";\n\nvar Item = function Item(_ref) {\n  var item = _ref.item,\n      onPress = _ref.onPress;\n  return React.createElement(StyledRowView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(StyledPressable, {\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, React.createElement(StyledSmallText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, item.title, \" (\", item.year, \")\"), React.createElement(StyledImage, {\n    source: {\n      uri: item.posterURL\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar AddItem = function AddItem() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      itemToAdd = _useState2[0],\n      setItemToAdd = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      format = _useState4[0],\n      setFormat = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pictureQuality = _useState6[0],\n      setPictureQuality = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      searchValue = _useState8[0],\n      setSearchValue = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      searchResults = _useState10[0],\n      setSearchResults = _useState10[1];\n\n  useEffect(function () {\n    searchValue && debouncedGetDetails(searchValue);\n  }, [searchValue]);\n\n  var getItemsFromApiAsync = function getItemsFromApiAsync(text) {\n    var response, json;\n    return _regeneratorRuntime.async(function getItemsFromApiAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:3000/search\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                searchText: text\n              })\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            return _context.abrupt(\"return\", json);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var fetchSingleItemFromApi = function fetchSingleItemFromApi(_ref2) {\n    var id, media_type, response, json;\n    return _regeneratorRuntime.async(function fetchSingleItemFromApi$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            id = _ref2.id, media_type = _ref2.media_type;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:3000/search/\" + media_type + \"/\" + id));\n\n          case 4:\n            response = _context2.sent;\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            json = _context2.sent;\n            return _context2.abrupt(\"return\", json);\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.error(_context2.t0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 11]], Promise);\n  };\n\n  var getDetails = function getDetails(text) {\n    getItemsFromApiAsync(text).then(function (results) {\n      var resultList = [];\n      results.forEach(function (result) {\n        if (result.media_type !== 'person') {\n          var first_air_date = result.first_air_date,\n              id = result.id,\n              media_type = result.media_type,\n              name = result.name,\n              poster_path = result.poster_path,\n              release_date = result.release_date,\n              title = result.title;\n\n          if (media_type === 'tv') {\n            title = name;\n            release_date = first_air_date;\n          }\n\n          if (title.length > 20) title = title.slice(0, 17).concat('...');\n          var year = release_date.substring(0, 4);\n          var resultItem = {\n            id: id,\n            media_type: media_type,\n            posterURL: \"https://image.tmdb.org/t/p/w92/\" + poster_path,\n            title: title,\n            year: year\n          };\n          resultList.push(resultItem);\n        }\n      });\n      setSearchResults(resultList);\n    });\n  };\n\n  var debouncedGetDetails = useCallback(debounce(function (text) {\n    return getDetails(text);\n  }, 1500), []);\n\n  var handlePress = function handlePress(item) {\n    setItemToAdd(item);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var item, response, json;\n    return _regeneratorRuntime.async(function handleSubmit$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(fetchSingleItemFromApi(itemToAdd));\n\n          case 3:\n            item = _context3.sent;\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:3000/items\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                userID: '6071e1016ac38867d5e6e04f',\n                item: item,\n                format: format,\n                pictureQuality: pictureQuality\n              })\n            }));\n\n          case 6:\n            response = _context3.sent;\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            json = _context3.sent;\n            console.log('json: ');\n            return _context3.abrupt(\"return\", json);\n\n          case 14:\n            _context3.prev = 14;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error(_context3.t0);\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  };\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    return React.createElement(Item, {\n      onPress: function onPress() {\n        return handlePress(item);\n      },\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 38\n      }\n    });\n  };\n\n  return React.createElement(StyledCenteredSafeArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, React.createElement(SearchBar, {\n    stateUpdater: setSearchValue,\n    value: searchValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), searchResults && React.createElement(FlatList, {\n    data: searchResults,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.id;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }), itemToAdd && React.createElement(React.Fragment, null, React.createElement(StyledSmallText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"Choose quality: \"), React.createElement(Picker, {\n    selectedValue: pictureQuality,\n    style: {\n      height: 50,\n      width: 150\n    },\n    onValueChange: function onValueChange(itemValue) {\n      setPictureQuality(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"SD\",\n    value: \"sd\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"HD\",\n    value: \"hd\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"4K\",\n    value: \"4k\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  })), React.createElement(StyledSmallText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, \"Choose format: \"), React.createElement(Picker, {\n    selectedValue: format,\n    style: {\n      height: 50,\n      width: 150\n    },\n    onValueChange: function onValueChange(itemValue) {\n      return setFormat(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Physical\",\n    value: \"physical\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Digital\",\n    value: \"digital\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  })), React.createElement(StyledImage, {\n    source: {\n      uri: itemToAdd.posterURL\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }), React.createElement(StyledSmallText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, itemToAdd.title, \" (\", itemToAdd.year, \")\"), React.createElement(StyledRoundedButton, {\n    onPress: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, React.createElement(StyledButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, \"Add to Collection?\"))));\n};\n\nexport default AddItem;","map":{"version":3,"sources":["C:/Users/cwpul/Desktop/Projects/MovieLibrary/client/src/addItem.js"],"names":["React","useCallback","useEffect","useState","debounce","Picker","StyledButtonText","StyledCenteredSafeArea","StyledImage","StyledPressable","StyledRoundedButton","StyledRowView","StyledSmallText","StyledTextInput","SearchBar","Item","item","onPress","title","year","uri","posterURL","AddItem","itemToAdd","setItemToAdd","format","setFormat","pictureQuality","setPictureQuality","searchValue","setSearchValue","searchResults","setSearchResults","debouncedGetDetails","getItemsFromApiAsync","text","fetch","method","headers","Accept","body","JSON","stringify","searchText","response","json","console","error","fetchSingleItemFromApi","id","media_type","getDetails","then","results","resultList","forEach","result","first_air_date","name","poster_path","release_date","length","slice","concat","substring","resultItem","push","handlePress","handleSubmit","userID","log","renderItem","height","width","itemValue"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAASC,gBAAT,EAA2BC,sBAA3B,EAAmDC,WAAnD,EAAgEC,eAAhE,EAAiFC,mBAAjF,EAAsGC,aAAtG,EAAqHC,eAArH,EAAsIC,eAAtI;;AAEA,OAAOC,SAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,OAAT,QAASA,OAAT;AAAA,SACT,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAEA,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IAAI,CAACE,KADV,QACmBF,IAAI,CAACG,IADxB,MADJ,EAII,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAEJ,IAAI,CAACK;AAAZ,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CADS;AAAA,CAAb;;AAWA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,kBACenB,QAAQ,CAAC,IAAD,CADvB;AAAA;AAAA,MACXoB,SADW;AAAA,MACAC,YADA;;AAAA,mBAEUrB,QAAQ,CAAC,IAAD,CAFlB;AAAA;AAAA,MAEXsB,MAFW;AAAA,MAEHC,SAFG;;AAAA,mBAG0BvB,QAAQ,CAAC,IAAD,CAHlC;AAAA;AAAA,MAGXwB,cAHW;AAAA,MAGKC,iBAHL;;AAAA,mBAIoBzB,QAAQ,CAAC,IAAD,CAJ5B;AAAA;AAAA,MAIX0B,WAJW;AAAA,MAIEC,cAJF;;AAAA,mBAKwB3B,QAAQ,CAAC,IAAD,CALhC;AAAA;AAAA,MAKX4B,aALW;AAAA,MAKIC,gBALJ;;AAOlB9B,EAAAA,SAAS,CAAC,YAAM;AACZ2B,IAAAA,WAAW,IAAII,mBAAmB,CAACJ,WAAD,CAAlC;AACH,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAMK,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEAC,KAAK,iCAAiC;AACvDC,cAAAA,MAAM,EAAE,MAD+C;AAEvDC,cAAAA,OAAO,EAAE;AACLC,gBAAAA,MAAM,EAAE,kBADH;AAEL,gCAAgB;AAFX,eAF8C;AAMvDC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,gBAAAA,UAAU,EAAER;AADK,eAAf;AANiD,aAAjC,CAFL;;AAAA;AAEjBS,YAAAA,QAFiB;AAAA;AAAA,6CAYJA,QAAQ,CAACC,IAAT,EAZI;;AAAA;AAYjBA,YAAAA,IAZiB;AAAA,6CAadA,IAbc;;AAAA;AAAA;AAAA;AAerBC,YAAAA,OAAO,CAACC,KAAR;;AAfqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAmBA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,EAAT,SAASA,EAAT,EAAaC,UAAb,SAAaA,UAAb;AAAA;AAAA;AAAA,6CAEFd,KAAK,mCAAiCc,UAAjC,SAA+CD,EAA/C,CAFH;;AAAA;AAEnBL,YAAAA,QAFmB;AAAA;AAAA,6CAGNA,QAAQ,CAACC,IAAT,EAHM;;AAAA;AAGnBA,YAAAA,IAHmB;AAAA,8CAIhBA,IAJgB;;AAAA;AAAA;AAAA;AAMvBC,YAAAA,OAAO,CAACC,KAAR;;AANuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAWA,MAAMI,UAAU,GAAG,SAAbA,UAAa,CAAChB,IAAD,EAAU;AACzBD,IAAAA,oBAAoB,CAACC,IAAD,CAApB,CACCiB,IADD,CACM,UAAAC,OAAO,EAAI;AACb,UAAIC,UAAU,GAAG,EAAjB;AACAD,MAAAA,OAAO,CAACE,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACtB,YAAIA,MAAM,CAACN,UAAP,KAAsB,QAA1B,EAAoC;AAAA,cAC1BO,cAD0B,GACiDD,MADjD,CAC1BC,cAD0B;AAAA,cACVR,EADU,GACiDO,MADjD,CACVP,EADU;AAAA,cACNC,UADM,GACiDM,MADjD,CACNN,UADM;AAAA,cACMQ,IADN,GACiDF,MADjD,CACME,IADN;AAAA,cACYC,WADZ,GACiDH,MADjD,CACYG,WADZ;AAAA,cACyBC,YADzB,GACiDJ,MADjD,CACyBI,YADzB;AAAA,cACuC1C,KADvC,GACiDsC,MADjD,CACuCtC,KADvC;;AAEhC,cAAIgC,UAAU,KAAK,IAAnB,EAAyB;AACrBhC,YAAAA,KAAK,GAAGwC,IAAR;AACAE,YAAAA,YAAY,GAAGH,cAAf;AACH;;AACD,cAAIvC,KAAK,CAAC2C,MAAN,GAAe,EAAnB,EAAuB3C,KAAK,GAAGA,KAAK,CAAC4C,KAAN,CAAY,CAAZ,EAAe,EAAf,EAAmBC,MAAnB,CAA0B,KAA1B,CAAR;AACvB,cAAM5C,IAAI,GAAGyC,YAAY,CAACI,SAAb,CAAuB,CAAvB,EAA0B,CAA1B,CAAb;AACA,cAAMC,UAAU,GAAG;AACfhB,YAAAA,EAAE,EAAFA,EADe;AAEfC,YAAAA,UAAU,EAAVA,UAFe;AAGf7B,YAAAA,SAAS,sCAAoCsC,WAH9B;AAIfzC,YAAAA,KAAK,EAALA,KAJe;AAKfC,YAAAA,IAAI,EAAJA;AALe,WAAnB;AAOAmC,UAAAA,UAAU,CAACY,IAAX,CAAgBD,UAAhB;AACH;AACJ,OAlBD;AAmBAjC,MAAAA,gBAAgB,CAACsB,UAAD,CAAhB;AACH,KAvBD;AAwBH,GAzBD;;AA4BA,MAAMrB,mBAAmB,GAAGhC,WAAW,CACnCG,QAAQ,CAAC,UAAA+B,IAAI;AAAA,WAAIgB,UAAU,CAAChB,IAAD,CAAd;AAAA,GAAL,EAA2B,IAA3B,CAD2B,EAEnC,EAFmC,CAAvC;;AAKA,MAAMgC,WAAW,GAAG,SAAdA,WAAc,CAAAnD,IAAI,EAAI;AACxBQ,IAAAA,YAAY,CAACR,IAAD,CAAZ;AACH,GAFD;;AAKA,MAAMoD,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEMpB,sBAAsB,CAACzB,SAAD,CAF5B;;AAAA;AAEPP,YAAAA,IAFO;AAAA;AAAA,6CAGQoB,KAAK,gCAAgC;AACtDC,cAAAA,MAAM,EAAE,MAD8C;AAEtDC,cAAAA,OAAO,EAAE;AACLC,gBAAAA,MAAM,EAAE,kBADH;AAEL,gCAAgB;AAFX,eAF6C;AAMtDC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB2B,gBAAAA,MAAM,EAAE,0BADS;AAEjBrD,gBAAAA,IAAI,EAAJA,IAFiB;AAGjBS,gBAAAA,MAAM,EAANA,MAHiB;AAIjBE,gBAAAA,cAAc,EAAdA;AAJiB,eAAf;AANgD,aAAhC,CAHb;;AAAA;AAGTiB,YAAAA,QAHS;AAAA;AAAA,6CAgBIA,QAAQ,CAACC,IAAT,EAhBJ;;AAAA;AAgBTA,YAAAA,IAhBS;AAiBbC,YAAAA,OAAO,CAACwB,GAAR,CAAY,QAAZ;AAjBa,8CAkBNzB,IAlBM;;AAAA;AAAA;AAAA;AAoBbC,YAAAA,OAAO,CAACC,KAAR;;AApBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAyBA,MAAMwB,UAAU,GAAG,SAAbA,UAAa;AAAA,QAAGvD,IAAH,SAAGA,IAAH;AAAA,WAAc,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE;AAAA,eAAMmD,WAAW,CAACnD,IAAD,CAAjB;AAAA,OAAf;AAAwC,MAAA,IAAI,EAAEA,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AAAA,GAAnB;;AAEA,SACI,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAGc,cAA1B;AAA2C,IAAA,KAAK,EAAED,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGQE,aAAa,IACb,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEA,aADV;AAEI,IAAA,UAAU,EAAEwC,UAFhB;AAGI,IAAA,YAAY,EAAE,sBAAAvD,IAAI;AAAA,kBAAOA,IAAI,CAACiC,EAAZ;AAAA,KAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,EAYQ1B,SAAS,IAET,0CACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAEI,cADnB;AAEI,IAAA,KAAK,EAAE;AAAE6C,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAFX;AAGI,IAAA,aAAa,EAAE,uBAACC,SAAD,EAAe;AAC1B9C,MAAAA,iBAAiB,CAAC8C,SAAD,CAAjB;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,IAAnB;AAAwB,IAAA,KAAK,EAAC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,IAAnB;AAAwB,IAAA,KAAK,EAAC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,IAAnB;AAAwB,IAAA,KAAK,EAAC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAFJ,EAcI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAdJ,EAeI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAEjD,MADnB;AAEI,IAAA,KAAK,EAAE;AAAE+C,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAFX;AAGI,IAAA,aAAa,EAAE,uBAACC,SAAD;AAAA,aACXhD,SAAS,CAACgD,SAAD,CADE;AAAA,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,UAAnB;AAA8B,IAAA,KAAK,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,SAAnB;AAA6B,IAAA,KAAK,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAfJ,EAyBI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAE;AAAEtD,MAAAA,GAAG,EAAEG,SAAS,CAACF;AAAjB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,EA0BI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,SAAS,CAACL,KADf,QACwBK,SAAS,CAACJ,IADlC,MA1BJ,EA8BI,oBAAC,mBAAD;AAAqB,IAAA,OAAO,EAAEiD,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CA9BJ,CAdR,CADJ;AAoDH,CA9JD;;AAgKA,eAAe9C,OAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { debounce } from 'lodash';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { StyledButtonText, StyledCenteredSafeArea, StyledImage, StyledPressable, StyledRoundedButton, StyledRowView, StyledSmallText, StyledTextInput } from './config/globalStyles';\r\nimport { FlatList } from 'react-native';\r\nimport SearchBar from './components/searchBar';\r\n\r\nconst Item = ({ item, onPress }) => (\r\n    <StyledRowView>\r\n        <StyledPressable onPress={onPress}>\r\n            <StyledSmallText>\r\n                {item.title} ({item.year})\r\n            </StyledSmallText>\r\n            <StyledImage source={{ uri: item.posterURL }} />\r\n        </StyledPressable>\r\n    </StyledRowView>  \r\n);\r\n\r\nconst AddItem = () => {\r\n    const [itemToAdd, setItemToAdd] =useState(null);\r\n    const [format, setFormat] = useState(null);\r\n    const [pictureQuality, setPictureQuality] = useState(null);\r\n    const [searchValue, setSearchValue] = useState(null);\r\n    const [searchResults, setSearchResults] = useState(null);\r\n\r\n    useEffect(() => {\r\n        searchValue && debouncedGetDetails(searchValue);\r\n    }, [searchValue]);\r\n    \r\n    const getItemsFromApiAsync = async (text) => {\r\n        try {\r\n            let response = await fetch(`http://localhost:3000/search`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    searchText: text\r\n                })\r\n            });\r\n            let json = await response.json();\r\n            return json;\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const fetchSingleItemFromApi = async ({ id, media_type }) => {\r\n        try {\r\n            let response = await fetch(`http://localhost:3000/search/${media_type}/${id}`);\r\n            let json = await response.json();\r\n            return json;\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    //manipulate results from API call to only get details needed for displaying\r\n    const getDetails = (text) => {\r\n        getItemsFromApiAsync(text)\r\n        .then(results => {\r\n            let resultList = [];\r\n            results.forEach(result => {\r\n                if (result.media_type !== 'person') {\r\n                    let { first_air_date, id, media_type, name, poster_path, release_date, title } = result;\r\n                    if (media_type === 'tv') {\r\n                        title = name;\r\n                        release_date = first_air_date;\r\n                    }\r\n                    if (title.length > 20) title = title.slice(0, 17).concat('...');\r\n                    const year = release_date.substring(0, 4);\r\n                    const resultItem = {\r\n                        id,\r\n                        media_type,\r\n                        posterURL: `https://image.tmdb.org/t/p/w92/${poster_path}`,\r\n                        title,\r\n                        year\r\n                    };\r\n                    resultList.push(resultItem);\r\n                }\r\n            });\r\n            setSearchResults(resultList);\r\n        });\r\n    }\r\n\r\n    //use debounce when sending request to minimize api hits. Takes text from input\r\n    const debouncedGetDetails = useCallback(\r\n        debounce(text => getDetails(text), 1500),\r\n        []\r\n    );\r\n\r\n    const handlePress = item => {\r\n        setItemToAdd(item);\r\n    };\r\n\r\n    // Query TMDB to get additional item details, then save to mongoDB\r\n    const handleSubmit = async () => {\r\n        try {\r\n            const item = await fetchSingleItemFromApi(itemToAdd);\r\n            let response = await fetch(`http://localhost:3000/items`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    userID: '6071e1016ac38867d5e6e04f',\r\n                    item,\r\n                    format,\r\n                    pictureQuality\r\n                })\r\n            });\r\n            let json = await response.json();\r\n            console.log('json: ',);\r\n            return json;\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    // item template for FlatList\r\n    const renderItem = ({ item }) => <Item onPress={() => handlePress(item)} item={item} />;\r\n\r\n    return (\r\n        <StyledCenteredSafeArea>\r\n            <SearchBar stateUpdater={ setSearchValue } value={searchValue} />\r\n            {\r\n                searchResults &&\r\n                <FlatList\r\n                    data={searchResults}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => `${item.id}`}\r\n                />\r\n            }\r\n\r\n            {\r\n                itemToAdd &&\r\n\r\n                <>\r\n                    <StyledSmallText>Choose quality: </StyledSmallText>\r\n                    <Picker\r\n                        selectedValue={pictureQuality}\r\n                        style={{ height: 50, width: 150 }}\r\n                        onValueChange={(itemValue) => {\r\n                            setPictureQuality(itemValue);\r\n                        }\r\n                        }>\r\n                        <Picker.Item label=\"SD\" value=\"sd\" />\r\n                        <Picker.Item label=\"HD\" value=\"hd\" />\r\n                        <Picker.Item label=\"4K\" value=\"4k\" />\r\n                    </Picker>\r\n\r\n                    <StyledSmallText>Choose format: </StyledSmallText>\r\n                    <Picker\r\n                        selectedValue={format}\r\n                        style={{ height: 50, width: 150 }}\r\n                        onValueChange={(itemValue) =>\r\n                            setFormat(itemValue)\r\n                        }>\r\n                        <Picker.Item label=\"Physical\" value=\"physical\" />\r\n                        <Picker.Item label=\"Digital\" value=\"digital\" />\r\n                    </Picker>\r\n                    \r\n                    <StyledImage source={{ uri: itemToAdd.posterURL }} />\r\n                    <StyledSmallText>\r\n                        {itemToAdd.title} ({itemToAdd.year})\r\n                    </StyledSmallText>\r\n\r\n                    <StyledRoundedButton onPress={handleSubmit}>\r\n                        <StyledButtonText>Add to Collection?</StyledButtonText>\r\n                    </StyledRoundedButton>\r\n                </>\r\n            }\r\n        </StyledCenteredSafeArea>\r\n    );\r\n}\r\n\r\nexport default AddItem;"]},"metadata":{},"sourceType":"module"}