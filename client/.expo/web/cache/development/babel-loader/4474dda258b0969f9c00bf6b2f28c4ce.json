{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cwpul\\\\Desktop\\\\Projects\\\\MovieLibrary\\\\src\\\\addItem.js\";\n\nimport React, { useCallback, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { debounce } from 'lodash';\nimport { Picker } from '@react-native-picker/picker';\nimport { StyledButtonText, StyledCenteredSafeArea, StyledRegularText, StyledRoundedButton, StyledTextInput } from \"./config/globalStyles\";\n\nvar AddItem = function AddItem() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      format = _useState2[0],\n      setFormat = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pictureQuality = _useState4[0],\n      setPictureQuality = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchResults = _useState6[0],\n      setSearchResults = _useState6[1];\n\n  var getMoviesFromApiAsync = function getMoviesFromApiAsync() {\n    var response, json;\n    return _regeneratorRuntime.async(function getMoviesFromApiAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://api.themoviedb.org/3/search/multi?api_key=c3f3d49f497ac5857c73ee93695e9da2&language=en-US&query=test&page=1'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            console.log(json.results);\n            return _context.abrupt(\"return\", json.results);\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  var getDetails = function getDetails() {\n    getMoviesFromApiAsync().then(function (results) {\n      var resultList = [];\n      results.forEach(function (result) {\n        var media_type = result.media_type,\n            name = result.name,\n            title = result.title,\n            release_date = result.release_date,\n            first_air_date = result.first_air_date,\n            poster_path = result.poster_path;\n\n        if (media_type === 'tv') {\n          title = name;\n          release_date = first_air_date;\n        }\n\n        var resultItem = {\n          title: title,\n          release_date: release_date,\n          poster: poster_path\n        };\n        resultList.push(resultItem);\n      });\n      setSearchResults(resultList);\n    });\n  };\n\n  var debouncedGetDetails = useCallback(debounce(getDetails, 2000), []);\n\n  var _onChangeText = function onChangeText(text) {\n    debouncedGetDetails();\n  };\n\n  return React.createElement(StyledCenteredSafeArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(StyledTextInput, {\n    autoFocus: true,\n    onChangeText: function onChangeText(text) {\n      return _onChangeText(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), React.createElement(Picker, {\n    selectedValue: pictureQuality,\n    style: {\n      height: 50,\n      width: 150\n    },\n    onValueChange: function onValueChange(itemValue) {\n      setPictureQuality(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"SD\",\n    value: \"sd\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"HD\",\n    value: \"hd\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"4K\",\n    value: \"4k\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })), React.createElement(Picker, {\n    selectedValue: format,\n    style: {\n      height: 50,\n      width: 150\n    },\n    onValueChange: function onValueChange(itemValue) {\n      return setFormat(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Physical\",\n    value: \"physical\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Digital\",\n    value: \"digital\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), searchResults && searchResults.map(function (item) {\n    return React.createElement(StyledRegularText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"There are results\");\n  }), React.createElement(StyledRoundedButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, React.createElement(StyledButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Add to Collection\")));\n};\n\nexport default AddItem;","map":{"version":3,"sources":["C:/Users/cwpul/Desktop/Projects/MovieLibrary/src/addItem.js"],"names":["React","useCallback","useState","debounce","Picker","StyledButtonText","StyledCenteredSafeArea","StyledRegularText","StyledRoundedButton","StyledTextInput","AddItem","format","setFormat","pictureQuality","setPictureQuality","searchResults","setSearchResults","getMoviesFromApiAsync","fetch","response","json","console","log","results","error","getDetails","then","resultList","forEach","result","media_type","name","title","release_date","first_air_date","poster_path","resultItem","poster","push","debouncedGetDetails","onChangeText","text","height","width","itemValue","map","item"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { View } from 'react-native';\r\nimport { debounce } from 'lodash';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { StyledButtonText, StyledCenteredSafeArea, StyledRegularText, StyledRoundedButton, StyledTextInput } from './config/globalStyles';\r\n\r\nconst AddItem = () => {\r\n    const [format, setFormat] = useState(null);\r\n    const [pictureQuality, setPictureQuality] = useState(null);\r\n    const [searchResults, setSearchResults] = useState(null);\r\n\r\n    // send the query parameters but do the api call from backend\r\n    // MAKE SURE TO USE API KEY AS A HEADER AND NOT IN THE URL\r\n    const getMoviesFromApiAsync = async () => {\r\n        try {\r\n            let response = await fetch('https://api.themoviedb.org/3/search/multi?api_key=c3f3d49f497ac5857c73ee93695e9da2&language=en-US&query=test&page=1');\r\n            let json = await response.json();\r\n            console.log(json.results);\r\n            return json.results;\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const getDetails = () => {\r\n        getMoviesFromApiAsync()\r\n        .then(results => {\r\n            let resultList = [];\r\n            results.forEach(result => {\r\n                let { media_type, name, title, release_date, first_air_date, poster_path } = result;\r\n                if (media_type === 'tv') {\r\n                    title = name;\r\n                    release_date = first_air_date;\r\n                }\r\n                const resultItem = {\r\n                    title,\r\n                    release_date,\r\n                    poster: poster_path\r\n                };\r\n                resultList.push(resultItem);\r\n            });\r\n            setSearchResults(resultList);\r\n        });\r\n    }\r\n\r\n    //use debounce when sending request to minimize api hits\r\n    const debouncedGetDetails = useCallback(\r\n        debounce(getDetails, 2000),\r\n        []\r\n    );\r\n\r\n    const onChangeText = (text) => {\r\n        debouncedGetDetails();\r\n    };\r\n\r\n    return (\r\n        <StyledCenteredSafeArea>\r\n            <StyledTextInput\r\n                autoFocus={true}\r\n                onChangeText={text => onChangeText(text)}\r\n            />\r\n            <Picker\r\n                selectedValue={pictureQuality}\r\n                style={{ height: 50, width: 150 }}\r\n                onValueChange={(itemValue) => {\r\n                    setPictureQuality(itemValue);\r\n                }\r\n                }>\r\n                <Picker.Item label=\"SD\" value=\"sd\" />\r\n                <Picker.Item label=\"HD\" value=\"hd\" />\r\n                <Picker.Item label=\"4K\" value=\"4k\" />\r\n            </Picker>\r\n\r\n            <Picker\r\n                selectedValue={format}\r\n                style={{ height: 50, width: 150 }}\r\n                onValueChange={(itemValue) =>\r\n                    setFormat(itemValue)\r\n                }>\r\n                <Picker.Item label=\"Physical\" value=\"physical\" />\r\n                <Picker.Item label=\"Digital\" value=\"digital\" />\r\n            </Picker>\r\n\r\n            {\r\n                searchResults &&\r\n                searchResults.map(item =>\r\n                    <StyledRegularText>\r\n                        There are results\r\n                    </StyledRegularText>\r\n                )\r\n            }\r\n\r\n            <StyledRoundedButton>\r\n                <StyledButtonText>Add to Collection</StyledButtonText>\r\n            </StyledRoundedButton>\r\n        </StyledCenteredSafeArea>\r\n    );\r\n}\r\n\r\nexport default AddItem;"]},"metadata":{},"sourceType":"module"}