{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cwpul\\\\Desktop\\\\Projects\\\\MovieLibrary\\\\src\\\\displayAll.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport { Picker } from '@react-native-picker/picker';\nimport seedMovies from \"../movieData\";\n\nvar DisplayAll = function DisplayAll() {\n  var _useState = useState(\"Title\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      sortOption = _useState2[0],\n      setSortOption = _useState2[1];\n\n  var movies = seedMovies.movies;\n  var sortList = movies.reduce(function (obj, movie) {\n    var firstLetter = movie.title[0].toUpperCase();\n    var ascii = firstLetter.charCodeAt();\n\n    if (ascii >= 48 && ascii <= 57) {\n      firstLetter = '#';\n    }\n\n    return _objectSpread(_objectSpread({}, obj), {}, _defineProperty({}, firstLetter, [].concat(_toConsumableArray(obj[firstLetter] || []), [movie])));\n  }, {});\n  var sortGenre = movies.reduce(function (obj, movie) {\n    movie.genre.forEach(function (genre) {\n      console.log('genre', genre);\n      obj[genre] = [].concat(_toConsumableArray(obj[genre] || []), [movie.title]);\n    });\n    return obj;\n  }, {});\n  console.log(sortGenre);\n  var sectionedList = Object.keys(sortList).sort().map(function (letter) {\n    return {\n      heading: letter,\n      data: sortList[letter]\n    };\n  });\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, sortOption), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Heading\"), React.createElement(Picker, {\n    selectedValue: sortOption,\n    style: {\n      height: 50,\n      width: 100\n    },\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSortOption(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Title\",\n    value: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Genre\",\n    value: \"genre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Format\",\n    value: \"format\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Actor\",\n    value: \"actor\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), \" //TODO get list of actor last names and sorted\", React.createElement(Picker.Item, {\n    label: \"Director\",\n    value: \"director\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  })), React.createElement(TextInput, {\n    onChangeText: console.log('text => onChangeText(text)'),\n    value: console.log('value'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), React.createElement(SectionList, {\n    sections: sectionedList,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 43\n        }\n      }, item.title);\n    },\n    renderSectionHeader: function renderSectionHeader(_ref2) {\n      var heading = _ref2.section.heading;\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 68\n        }\n      }, heading);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default DisplayAll;","map":{"version":3,"sources":["C:/Users/cwpul/Desktop/Projects/MovieLibrary/src/displayAll.js"],"names":["React","useState","Picker","seedMovies","DisplayAll","sortOption","setSortOption","movies","sortList","reduce","obj","movie","firstLetter","title","toUpperCase","ascii","charCodeAt","sortGenre","genre","forEach","console","log","sectionedList","Object","keys","sort","map","letter","heading","data","height","width","itemValue","itemIndex","item","section"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { Text, TextInput, SectionList } from 'react-native';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport seedMovies from '../movieData';\r\n\r\nconst DisplayAll = () => {\r\n    const [sortOption, setSortOption] = useState(\"Title\");\r\n    //TODO when sort option is selected, send req to server for new sorted list\r\n    const { movies } = seedMovies;\r\n    // take list of movies and modify into an object where the key is the first letter of the title and the value is an array of all movies starting with that letter\r\n    const sortList = movies.reduce((obj, movie) => {\r\n        let firstLetter = movie.title[0].toUpperCase();\r\n        const ascii = firstLetter.charCodeAt();\r\n        if (ascii >= 48 && ascii <= 57) {\r\n            firstLetter = '#';\r\n        }\r\n        return {\r\n            ...obj,\r\n            [firstLetter]: [...(obj[firstLetter] || []), movie]\r\n        }\r\n    }, {});\r\n\r\n    const sortGenre = movies.reduce((obj, movie) => {\r\n        movie.genre.forEach(genre => {\r\n            console.log('genre', genre);\r\n            obj[genre] = [...(obj[genre] || []), movie.title]\r\n        });\r\n        return obj;\r\n    }, {});\r\n\r\n    console.log(sortGenre);\r\n  \r\n    // sort new object by keys and format to specifications of 'SectionList'\r\n    const sectionedList = Object.keys(sortList).sort().map(letter => ({\r\n        heading: letter,\r\n        data: sortList[letter]\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Text>{sortOption}</Text>\r\n            <Text>Heading</Text>\r\n                <Picker\r\n                    selectedValue={sortOption}\r\n                    style={{ height: 50, width: 100 }}\r\n                    onValueChange={(itemValue, itemIndex) =>\r\n                        setSortOption(itemValue)\r\n                    }>\r\n                    <Picker.Item label=\"Title\" value=\"title\" />\r\n                    <Picker.Item label=\"Genre\" value=\"genre\" />\r\n                    <Picker.Item label=\"Format\" value=\"format\" />\r\n                    <Picker.Item label=\"Actor\" value=\"actor\" /> //TODO get list of actor last names and sorted\r\n                    <Picker.Item label=\"Director\" value=\"director\" />\r\n                </Picker>\r\n                \r\n                <TextInput\r\n                    onChangeText={console.log('text => onChangeText(text)')}\r\n                    value={console.log('value')}\r\n                />\r\n            <SectionList\r\n                sections={sectionedList}\r\n                renderItem={({ item }) => <Text>{item.title}</Text>}\r\n                renderSectionHeader={({ section: { heading } }) => <Text>{heading}</Text>}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DisplayAll;"]},"metadata":{},"sourceType":"module"}