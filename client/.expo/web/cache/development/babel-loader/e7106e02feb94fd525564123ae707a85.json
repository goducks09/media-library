{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cwpul\\\\Desktop\\\\Projects\\\\MovieLibrary\\\\src\\\\addItem.js\";\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { debounce } from 'lodash';\nimport { Picker } from '@react-native-picker/picker';\nimport { StyledButtonText, StyledCenteredSafeArea, StyledImage, StyledRoundedButton, StyledRowView, StyledSmallText, StyledTextInput } from \"./config/globalStyles\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TMDB_API_KEY from \"../secrets\";\n\nvar Item = function Item(_ref) {\n  var item = _ref.item,\n      onPress = _ref.onPress;\n  return React.createElement(StyledRowView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(Pressable, {\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, React.createElement(StyledSmallText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, item.title), React.createElement(StyledSmallText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, item.year), React.createElement(StyledImage, {\n    source: {\n      uri: item.posterURL\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar AddItem = function AddItem() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      format = _useState2[0],\n      setFormat = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pictureQuality = _useState4[0],\n      setPictureQuality = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchValue = _useState6[0],\n      setSearchValue = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      searchResults = _useState8[0],\n      setSearchResults = _useState8[1];\n\n  useEffect(function () {\n    searchValue && debouncedGetDetails(searchValue);\n  }, [searchValue]);\n\n  var getMoviesFromApiAsync = function getMoviesFromApiAsync(text) {\n    var response, json;\n    return _regeneratorRuntime.async(function getMoviesFromApiAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://api.themoviedb.org/3/search/multi?api_key=\" + TMDB_API_KEY + \"&language=en-US&query=\" + text + \"&page=1&include_adult=false\"));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            return _context.abrupt(\"return\", json.results);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var getDetails = function getDetails(text) {\n    getMoviesFromApiAsync(text).then(function (results) {\n      var resultList = [];\n      results.forEach(function (result) {\n        if (result.media_type !== 'person') {\n          var first_air_date = result.first_air_date,\n              id = result.id,\n              media_type = result.media_type,\n              name = result.name,\n              poster_path = result.poster_path,\n              release_date = result.release_date,\n              title = result.title;\n\n          if (media_type === 'tv') {\n            title = name;\n            release_date = first_air_date;\n          }\n\n          var year = release_date.substring(0, 4);\n          var resultItem = {\n            id: id,\n            title: title,\n            year: year,\n            posterURL: \"https://image.tmdb.org/t/p/w92/\" + poster_path\n          };\n          resultList.push(resultItem);\n        }\n      });\n      console.log(resultList);\n      setSearchResults(resultList);\n    });\n  };\n\n  var debouncedGetDetails = useCallback(debounce(function (text) {\n    return getDetails(text);\n  }, 1500), []);\n\n  var _onChangeText = function onChangeText(text) {\n    setSearchValue(text);\n  };\n\n  var _onPress = function onPress(id) {\n    var response, json;\n    return _regeneratorRuntime.async(function onPress$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://api.themoviedb.org/3/movie/\" + id + \"?api_key=\" + TMDB_API_KEY + \"&language=en-US&adult=false&append_to_response=credits\"));\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context2.sent;\n            console.log(json);\n            return _context2.abrupt(\"return\", json);\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(Item, {\n      onPress: function onPress() {\n        return _onPress(item.id);\n      },\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 38\n      }\n    });\n  };\n\n  return React.createElement(StyledCenteredSafeArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(StyledTextInput, {\n    autoFocus: true,\n    onChangeText: function onChangeText(text) {\n      return _onChangeText(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), searchResults && React.createElement(FlatList, {\n    data: searchResults,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker, {\n    selectedValue: pictureQuality,\n    style: {\n      height: 50,\n      width: 150\n    },\n    onValueChange: function onValueChange(itemValue) {\n      setPictureQuality(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"SD\",\n    value: \"sd\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"HD\",\n    value: \"hd\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"4K\",\n    value: \"4k\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  })), React.createElement(Picker, {\n    selectedValue: format,\n    style: {\n      height: 50,\n      width: 150\n    },\n    onValueChange: function onValueChange(itemValue) {\n      return setFormat(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Physical\",\n    value: \"physical\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Digital\",\n    value: \"digital\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  })), React.createElement(StyledRoundedButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, React.createElement(StyledButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Add to Collection\")));\n};\n\nexport default AddItem;","map":{"version":3,"sources":["C:/Users/cwpul/Desktop/Projects/MovieLibrary/src/addItem.js"],"names":["React","useCallback","useEffect","useState","debounce","Picker","StyledButtonText","StyledCenteredSafeArea","StyledImage","StyledRoundedButton","StyledRowView","StyledSmallText","StyledTextInput","TMDB_API_KEY","Item","item","onPress","title","year","uri","posterURL","AddItem","format","setFormat","pictureQuality","setPictureQuality","searchValue","setSearchValue","searchResults","setSearchResults","debouncedGetDetails","getMoviesFromApiAsync","text","fetch","response","json","results","console","error","getDetails","then","resultList","forEach","result","media_type","first_air_date","id","name","poster_path","release_date","substring","resultItem","push","log","onChangeText","renderItem","height","width","itemValue"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { debounce } from 'lodash';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { StyledButtonText, StyledCenteredSafeArea, StyledImage, StyledRoundedButton, StyledRowView, StyledSmallText, StyledTextInput } from './config/globalStyles';\r\nimport { FlatList, Pressable } from 'react-native';\r\nimport TMDB_API_KEY from '../secrets';\r\n\r\nconst Item = ({ item, onPress }) => (\r\n    <StyledRowView>\r\n        <Pressable onPress={onPress}>\r\n            <StyledSmallText>\r\n                {item.title}\r\n            </StyledSmallText>\r\n            <StyledSmallText>\r\n                {item.year}\r\n            </StyledSmallText>\r\n            <StyledImage source={{ uri: item.posterURL }} />\r\n        </Pressable>\r\n    </StyledRowView>  \r\n);\r\n\r\nconst AddItem = () => {\r\n    const [format, setFormat] = useState(null);\r\n    const [pictureQuality, setPictureQuality] = useState(null);\r\n    const [searchValue, setSearchValue] = useState(null);\r\n    const [searchResults, setSearchResults] = useState(null);\r\n\r\n    useEffect(() => {\r\n        searchValue && debouncedGetDetails(searchValue);\r\n    }, [searchValue]);\r\n\r\n    // send the query parameters but do the api call from backend\r\n    // MAKE SURE TO USE API KEY AS A HEADER AND NOT IN THE URL\r\n    const getMoviesFromApiAsync = async (text) => {\r\n        try {\r\n            let response = await fetch(`https://api.themoviedb.org/3/search/multi?api_key=${TMDB_API_KEY}&language=en-US&query=${text}&page=1&include_adult=false`);\r\n            let json = await response.json();\r\n            return json.results;\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    //manipulate results from API call to only get details needed for displaying\r\n    const getDetails = (text) => {\r\n        getMoviesFromApiAsync(text)\r\n        .then(results => {\r\n            let resultList = [];\r\n            results.forEach(result => {\r\n                if (result.media_type !== 'person') {\r\n                    let { first_air_date, id, media_type, name, poster_path, release_date, title } = result;\r\n                    if (media_type === 'tv') {\r\n                        title = name;\r\n                        release_date = first_air_date;\r\n                    }\r\n                    const year = release_date.substring(0, 4);\r\n                    const resultItem = {\r\n                        id,\r\n                        title,\r\n                        year,\r\n                        posterURL: `https://image.tmdb.org/t/p/w92/${poster_path}`\r\n                    };\r\n                    resultList.push(resultItem);\r\n                }\r\n            });\r\n            console.log(resultList);\r\n            setSearchResults(resultList);\r\n        });\r\n    }\r\n\r\n    //use debounce when sending request to minimize api hits. Takes text from input\r\n    const debouncedGetDetails = useCallback(\r\n        debounce(text => getDetails(text), 1500),\r\n        []\r\n    );\r\n\r\n    const onChangeText = (text) => {\r\n        setSearchValue(text);\r\n    };\r\n\r\n    const onPress = async (id) => {\r\n        try {\r\n            let response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${TMDB_API_KEY}&language=en-US&adult=false&append_to_response=credits`);\r\n            let json = await response.json();\r\n            console.log(json);\r\n            return json;\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    // item template for FlatList\r\n    const renderItem = ({ item }) => <Item onPress={() => onPress(item.id)} item={item} />;\r\n\r\n    return (\r\n        <StyledCenteredSafeArea>\r\n            <StyledTextInput\r\n                autoFocus={true}\r\n                onChangeText={text => onChangeText(text)}\r\n            />\r\n            {\r\n                searchResults &&\r\n                <FlatList\r\n                    data={searchResults}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id}\r\n                />\r\n            }\r\n            <Picker\r\n                selectedValue={pictureQuality}\r\n                style={{ height: 50, width: 150 }}\r\n                onValueChange={(itemValue) => {\r\n                    setPictureQuality(itemValue);\r\n                }\r\n                }>\r\n                <Picker.Item label=\"SD\" value=\"sd\" />\r\n                <Picker.Item label=\"HD\" value=\"hd\" />\r\n                <Picker.Item label=\"4K\" value=\"4k\" />\r\n            </Picker>\r\n\r\n            <Picker\r\n                selectedValue={format}\r\n                style={{ height: 50, width: 150 }}\r\n                onValueChange={(itemValue) =>\r\n                    setFormat(itemValue)\r\n                }>\r\n                <Picker.Item label=\"Physical\" value=\"physical\" />\r\n                <Picker.Item label=\"Digital\" value=\"digital\" />\r\n            </Picker>\r\n\r\n\r\n            <StyledRoundedButton>\r\n                <StyledButtonText>Add to Collection</StyledButtonText>\r\n            </StyledRoundedButton>\r\n        </StyledCenteredSafeArea>\r\n    );\r\n}\r\n\r\nexport default AddItem;"]},"metadata":{},"sourceType":"module"}