{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cwpul\\\\Desktop\\\\Projects\\\\MovieLibrary\\\\src\\\\movie.js\";\n\nimport React, { useReducer } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nvar initialState = {\n  actors: [],\n  category: [],\n  dateAdded: '',\n  director: {},\n  format: [],\n  genre: '',\n  imageURL: '',\n  releaseDate: 0,\n  runTime: 0,\n  title: 'Title'\n};\n\nvar reducer = function reducer() {\n  console.log('reducer');\n};\n\nvar Movie = function Movie() {\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      movie = _useReducer2[0],\n      setMovie = _useReducer2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, movie.title), React.createElement(Image, {\n    source: movie.imageURL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Starring:\"), movie.actors.map(function (actor) {\n    return React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, actor.fullName);\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Runtime: \", movie.runTime), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Genre: \", movie.genre), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Format:\", movie.format.map(function (format) {\n    return format;\n  })));\n};\n\nexport default Movie;","map":{"version":3,"sources":["C:/Users/cwpul/Desktop/Projects/MovieLibrary/src/movie.js"],"names":["React","useReducer","initialState","actors","category","dateAdded","director","format","genre","imageURL","releaseDate","runTime","title","reducer","console","log","Movie","movie","setMovie","map","actor","fullName"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,SAAS,EAAE,EAHM;AAIjBC,EAAAA,QAAQ,EAAE,EAJO;AAKjBC,EAAAA,MAAM,EAAE,EALS;AAMjBC,EAAAA,KAAK,EAAE,EANU;AAOjBC,EAAAA,QAAQ,EAAE,EAPO;AAQjBC,EAAAA,WAAW,EAAE,CARI;AASjBC,EAAAA,OAAO,EAAE,CATQ;AAUjBC,EAAAA,KAAK,EAAE;AAVU,CAArB;;AAaA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,CAFD;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,oBACUf,UAAU,CAACY,OAAD,EAAUX,YAAV,CADpB;AAAA;AAAA,MACTe,KADS;AAAA,MACFC,QADE;;AAGhB,SACI,0CACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,KAAK,CAACL,KAAb,CADJ,EAGI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAEK,KAAK,CAACR,QADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAOI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPJ,EAQKQ,KAAK,CAACd,MAAN,CAAagB,GAAb,CAAiB,UAAAC,KAAK;AAAA,WACnB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,KAAK,CAACC,QAAb,CADmB;AAAA,GAAtB,CARL,EAYI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBJ,KAAK,CAACN,OAAtB,CAZJ,EAaI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAcM,KAAK,CAACT,KAApB,CAbJ,EAcI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACKS,KAAK,CAACV,MAAN,CAAaY,GAAb,CAAiB,UAAAZ,MAAM;AAAA,WACpBA,MADoB;AAAA,GAAvB,CADL,CAdJ,CADJ;AAsBH,CAzBD;;AA2BA,eAAeS,KAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport { Image, Text } from 'react-native';\r\n\r\nconst initialState = {\r\n    actors: [], //TODO needs to be an array of obj {firstName, lastName, fullName}\r\n    category: [],\r\n    dateAdded: '',\r\n    director: {},\r\n    format: [], //TODO needs to take input and comma separate (e.g. \"4K Blu-ray Physical\" => [\"4K\", \"Blu-ray\", \"Physical\"])\r\n    genre: '', //TODO make array for multiple options?\r\n    imageURL: '',\r\n    releaseDate: 0,\r\n    runTime: 0,\r\n    title: 'Title',\r\n}\r\n\r\nconst reducer = () => {\r\n    console.log('reducer');\r\n}\r\n\r\nconst Movie = () => {\r\n    const [movie, setMovie] = useReducer(reducer, initialState);\r\n\r\n    return (\r\n        <>\r\n            <Text>{movie.title}</Text>\r\n\r\n            <Image\r\n                source={movie.imageURL}\r\n            />\r\n            \r\n            <Text>Starring:</Text>\r\n            {movie.actors.map(actor => \r\n                <Text>{actor.fullName}</Text>\r\n            )}\r\n\r\n            <Text>Runtime: {movie.runTime}</Text>\r\n            <Text>Genre: {movie.genre}</Text>\r\n            <Text>Format:\r\n                {movie.format.map(format =>\r\n                    format\r\n                )}\r\n            </Text>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}